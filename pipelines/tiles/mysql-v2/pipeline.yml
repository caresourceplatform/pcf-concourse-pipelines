resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: om-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pivnet-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: pivnet-cli
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: jq
  type: github-release
  source:
    user: stedolan
    repository: jq
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pipelines-repo
  type: git
  source:
    uri: ((git_url))
    branch: ((git_branch))
    username: ((git_username))
    password: ((git_token))

- name: pivnet-product
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((product_name))
    product_version: ((product_version))

jobs:

- name: delete-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
    - get: om-cli
      params:
        globs:
        - "*-linux"

  - task: unstage-tile
    file: pipelines-repo/tasks/unstage-product/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))

- name: upload-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
    - get: pivnet-cli
      params:
        globs:
        - "*linux-amd64*"
    - get: jq
      params:
        globs:
        - "*linux64*"

  - task: upload-tile
    file: pipelines-repo/tasks/upload-product/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))

  - task: upload-stemcell
    file: pipelines-repo/tasks/stemcell-uploader/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))
      IAAS_TYPE: ((iaas_type))

- name: stage-product
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [upload-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [upload-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [upload-product]

  - task: stage-tile
    file: pipelines-repo/tasks/stage-product/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))

- name: config-product
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [stage-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [stage-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [stage-product]
    - get: jq
      params:
        globs:
        - "*linux64*"
      passed: [upload-product]

  - task: config-tile
    file: pipelines-repo/tasks/config-mysql-v2/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      NETWORK_NAME: ((network_name))
      SERVICE_NETWORK_NAME: ((service_network_name))
      OTHER_AZS: ((other_azs))
      SINGLETON_JOBS_AZ: ((singleton_jobs_az))
      PRODUCT_IDENTIFIER: ((product_identifier))
      ALLOW_LOWER_CASE_TABLE_NAMES_VIA_CONFIG_PARAM: ((allow_lower_case_table_names_via_config_param))
      AUDIT_LOGGING_ENABLED: ((audit_logging_enabled))
      BACKUPS_SELECTOR: ((backups_selector))
      BACKUPS_SELECTOR_AZURE_ACCOUNT: ((backups_selector_azure_account))
      BACKUPS_SELECTOR_AZURE_BLOB_STORE_BASE_URL: ((backups_selector_azure_blob_store_base_url))
      BACKUPS_SELECTOR_AZURE_CONTAINER: ((backups_selector_azure_container))
      BACKUPS_SELECTOR_AZURE_CRON_SCHEDULE: ((backups_selector_azure_cron_schedule))
      BACKUPS_SELECTOR_AZURE_ENABLE_EMAIL_ALERTS: ((backups_selector_azure_enable_email_alerts))
      BACKUPS_SELECTOR_AZURE_PATH: ((backups_selector_azure_path))
      BACKUPS_SELECTOR_AZURE_STORAGE_ACCESS_KEY: ((backups_selector_azure_storage_access_key))
      BACKUPS_SELECTOR_GCS_BUCKET_NAME: ((backups_selector_gcs_bucket_name))
      BACKUPS_SELECTOR_GCS_CRON_SCHEDULE: ((backups_selector_gcs_cron_schedule))
      BACKUPS_SELECTOR_GCS_ENABLE_EMAIL_ALERTS: ((backups_selector_gcs_enable_email_alerts))
      BACKUPS_SELECTOR_GCS_PROJECT_ID: ((backups_selector_gcs_project_id))
      BACKUPS_SELECTOR_GCS_SERVICE_ACCOUNT_JSON: ((backups_selector_gcs_service_account_json))
      BACKUPS_SELECTOR_S3_ACCESS_KEY_ID: ((backups_selector_s3_access_key_id))
      BACKUPS_SELECTOR_S3_BUCKET_NAME: ((backups_selector_s3_bucket_name))
      BACKUPS_SELECTOR_S3_CRON_SCHEDULE: ((backups_selector_s3_cron_schedule))
      BACKUPS_SELECTOR_S3_ENABLE_EMAIL_ALERTS: ((backups_selector_s3_enable_email_alerts))
      BACKUPS_SELECTOR_S3_ENDPOINT_URL: ((backups_selector_s3_endpoint_url))
      BACKUPS_SELECTOR_S3_PATH: ((backups_selector_s3_path))
      BACKUPS_SELECTOR_S3_REGION: ((backups_selector_s3_region))
      BACKUPS_SELECTOR_S3_SECRET_ACCESS_KEY: ((backups_selector_s3_secret_access_key))
      BACKUPS_SELECTOR_SCP_CRON_SCHEDULE: ((backups_selector_scp_cron_schedule))
      BACKUPS_SELECTOR_SCP_DESTINATION: ((backups_selector_scp_destination))
      BACKUPS_SELECTOR_SCP_ENABLE_EMAIL_ALERTS: ((backups_selector_scp_enable_email_alerts))
      BACKUPS_SELECTOR_SCP_FINGERPRINT: ((backups_selector_scp_fingerprint))
      BACKUPS_SELECTOR_SCP_KEY: ((backups_selector_scp_key))
      BACKUPS_SELECTOR_SCP_PORT: ((backups_selector_scp_port))
      BACKUPS_SELECTOR_SCP_SERVER: ((backups_selector_scp_server))
      BACKUPS_SELECTOR_SCP_USER: ((backups_selector_scp_user))
      ENABLE_LOWER_CASE_TABLE_NAMES: ((enable_lower_case_table_names))
      ENABLE_READ_ONLY_ADMIN: ((enable_read_only_admin))
      GLOBAL_SERVICE_INSTANCE_LIMIT: ((global_service_instance_limit))
      LOCAL_INFILE: ((local_infile))
      MYSQL_METRICS_FREQUENCY: ((mysql_metrics_frequency))
      PLAN1_SELECTOR: ((plan1_selector))
      PLAN1_SELECTOR_ACTIVE_ACCESS_DROPDOWN: ((plan1_selector_active_access_dropdown))
      PLAN1_SELECTOR_ACTIVE_AZ_MULTI_SELECT: ((plan1_selector_active_az_multi_select))
      PLAN1_SELECTOR_ACTIVE_DESCRIPTION: ((plan1_selector_active_description))
      PLAN1_SELECTOR_ACTIVE_DISK_SIZE: ((plan1_selector_active_disk_size))
      PLAN1_SELECTOR_ACTIVE_INSTANCE_LIMIT: ((plan1_selector_active_instance_limit))
      PLAN1_SELECTOR_ACTIVE_MULTI_NODE_DEPLOYMENT: ((plan1_selector_active_multi_node_deployment))
      PLAN1_SELECTOR_ACTIVE_NAME: ((plan1_selector_active_name))
      PLAN1_SELECTOR_ACTIVE_VM_TYPE: ((plan1_selector_active_vm_type))
      PLAN2_SELECTOR: ((plan2_selector))
      PLAN2_SELECTOR_ACTIVE_ACCESS_DROPDOWN: ((plan2_selector_active_access_dropdown))
      PLAN2_SELECTOR_ACTIVE_AZ_MULTI_SELECT: ((plan2_selector_active_az_multi_select))
      PLAN2_SELECTOR_ACTIVE_DESCRIPTION: ((plan2_selector_active_description))
      PLAN2_SELECTOR_ACTIVE_DISK_SIZE: ((plan2_selector_active_disk_size))
      PLAN2_SELECTOR_ACTIVE_INSTANCE_LIMIT: ((plan2_selector_active_instance_limit))
      PLAN2_SELECTOR_ACTIVE_MULTI_NODE_DEPLOYMENT: ((plan2_selector_active_multi_node_deployment))
      PLAN2_SELECTOR_ACTIVE_NAME: ((plan2_selector_active_name))
      PLAN2_SELECTOR_ACTIVE_VM_TYPE: ((plan2_selector_active_vm_type))
      PLAN3_SELECTOR: ((plan3_selector))
      PLAN3_SELECTOR_ACTIVE_ACCESS_DROPDOWN: ((plan3_selector_active_access_dropdown))
      PLAN3_SELECTOR_ACTIVE_AZ_MULTI_SELECT: ((plan3_selector_active_az_multi_select))
      PLAN3_SELECTOR_ACTIVE_DESCRIPTION: ((plan3_selector_active_description))
      PLAN3_SELECTOR_ACTIVE_DISK_SIZE: ((plan3_selector_active_disk_size))
      PLAN3_SELECTOR_ACTIVE_INSTANCE_LIMIT: ((plan3_selector_active_instance_limit))
      PLAN3_SELECTOR_ACTIVE_MULTI_NODE_DEPLOYMENT: ((plan3_selector_active_multi_node_deployment))
      PLAN3_SELECTOR_ACTIVE_NAME: ((plan3_selector_active_name))
      PLAN3_SELECTOR_ACTIVE_VM_TYPE: ((plan3_selector_active_vm_type))
      PLAN4_SELECTOR: ((plan4_selector))
      PLAN4_SELECTOR_ACTIVE_ACCESS_DROPDOWN: ((plan4_selector_active_access_dropdown))
      PLAN4_SELECTOR_ACTIVE_AZ_MULTI_SELECT: ((plan4_selector_active_az_multi_select))
      PLAN4_SELECTOR_ACTIVE_DESCRIPTION: ((plan4_selector_active_description))
      PLAN4_SELECTOR_ACTIVE_DISK_SIZE: ((plan4_selector_active_disk_size))
      PLAN4_SELECTOR_ACTIVE_INSTANCE_LIMIT: ((plan4_selector_active_instance_limit))
      PLAN4_SELECTOR_ACTIVE_MULTI_NODE_DEPLOYMENT: ((plan4_selector_active_multi_node_deployment))
      PLAN4_SELECTOR_ACTIVE_NAME: ((plan4_selector_active_name))
      PLAN4_SELECTOR_ACTIVE_VM_TYPE: ((plan4_selector_active_vm_type))
      PLAN5_SELECTOR: ((plan5_selector))
      PLAN5_SELECTOR_ACTIVE_ACCESS_DROPDOWN: ((plan5_selector_active_access_dropdown))
      PLAN5_SELECTOR_ACTIVE_AZ_MULTI_SELECT: ((plan5_selector_active_az_multi_select))
      PLAN5_SELECTOR_ACTIVE_DESCRIPTION: ((plan5_selector_active_description))
      PLAN5_SELECTOR_ACTIVE_DISK_SIZE: ((plan5_selector_active_disk_size))
      PLAN5_SELECTOR_ACTIVE_INSTANCE_LIMIT: ((plan5_selector_active_instance_limit))
      PLAN5_SELECTOR_ACTIVE_MULTI_NODE_DEPLOYMENT: ((plan5_selector_active_multi_node_deployment))
      PLAN5_SELECTOR_ACTIVE_NAME: ((plan5_selector_active_name))
      PLAN5_SELECTOR_ACTIVE_VM_TYPE: ((plan5_selector_active_vm_type))
      SYSLOG_MIGRATION_SELECTOR: ((syslog_migration_selector))
      SYSLOG_MIGRATION_SELECTOR_ENABLED_ADDRESS: ((syslog_migration_selector_enabled_address))
      SYSLOG_MIGRATION_SELECTOR_ENABLED_CA_CERT: ((syslog_migration_selector_enabled_ca_cert))
      SYSLOG_MIGRATION_SELECTOR_ENABLED_PERMITTED_PEER: ((syslog_migration_selector_enabled_permitted_peer))
      SYSLOG_MIGRATION_SELECTOR_ENABLED_PORT: ((syslog_migration_selector_enabled_port))
      SYSLOG_MIGRATION_SELECTOR_ENABLED_TLS_ENABLED: ((syslog_migration_selector_enabled_tls_enabled))
      SYSLOG_MIGRATION_SELECTOR_ENABLED_TRANSPORT_PROTOCOL: ((syslog_migration_selector_enabled_transport_protocol))
      USERSTAT: ((userstat))
      VM_EXTENSIONS: ((vm_extensions))
      DEDICATED_MYSQL_BROKER_INSTANCES: ((dedicated_mysql_broker_instances))
      DEDICATED_MYSQL_BROKER_INSTANCE_TYPE: ((dedicated_mysql_broker_instance_type))

- name: disable-errands
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [config-product]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [config-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [config-product]
      trigger: true
    - get: jq
      params:
        globs:
        - "*linux64*"
      passed: [config-product]

  - task: disable-errands
    file: pipelines-repo/tasks/disable-errands/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))
      ERRANDS: ((errands_to_disable))

- name: apply-changes
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [disable-errands]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [disable-errands]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [disable-errands]

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))

- name: set-upgrade-pipeline
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [apply-changes]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [apply-changes]
      trigger: true

  - task: set-upgrade-pipeline
    file: pipelines-repo/tasks/set-upgrade-pipeline/task.yml
    params:
      DEBUG: ((debug))
      CONCOURSE_USERNAME: ((concourse_user))
      CONCOURSE_PASSWD: ((concourse_pwd))
      CONCOURSE_URL: ((concourse_url))
      BUILD_PIPELINE_NAME: ((pipeline-name))
      BUILD_TEAM_NAME: ((team-name))
      UPGRADE_PIPELINE_NAME: ((upgrade-pipeline-name))
      PRODUCT_NAME: ((product_name))
      PRODUCT_IDENTIFIER: ((product_identifier))
      PRODUCT_VERSION: ((product_version))

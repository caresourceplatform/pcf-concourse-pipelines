resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:

- name: om-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pivnet-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: pivnet-cli
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: jq
  type: github-release
  source:
    user: stedolan
    repository: jq
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pipelines-repo
  type: git
  source:
    uri: ((git_url))
    branch: ((git_branch))
    username: ((git_username))
    password: ((git_token))

- name: pivnet-product
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((product_name))
    product_version: ((product_version))

jobs:

- name: delete-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
    - get: om-cli
      params:
        globs:
        - "*-linux"

  - task: unstage-tile
    file: pipelines-repo/tasks/unstage-product/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))

- name: upload-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
    - get: pivnet-cli
      params:
        globs:
        - "*linux-amd64*"
    - get: jq
      params:
        globs:
        - "*linux64*"

  - task: upload-tile
    file: pipelines-repo/tasks/upload-product/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))

  - task: upload-stemcell
    file: pipelines-repo/tasks/stemcell-uploader/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))
      IAAS_TYPE: ((iaas_type))

- name: stage-product
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [upload-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [upload-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [upload-product]

  - task: stage-tile
    file: pipelines-repo/tasks/stage-product/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))

- name: config-product
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [stage-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
        save: true
      passed: [stage-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [stage-product]
    - get: jq
      params:
        globs:
        - "*linux64*"
      passed: [upload-product]

  - task: config-tile
    file: pipelines-repo/tasks/config-p-push-notifications/task.yml
    params:
      DEBUG:
      OPS_MGR_HOST:
      OPS_MGR_USR:
      OPS_MGR_PWD:
      NETWORK_NAME:
      SERVICE_NETWORK_NAME:
      OTHER_AZS:
      SINGLETON_JOBS_AZ:
      PRODUCT_IDENTIFIER:
      APNS_PROXY:
      APNS_PROXY_SOCKS_HOST:
      APNS_PROXY_SOCKS_PORT:
      BAIDU_PROXY:
      BAIDU_PROXY_HTTP_HOST:
      BAIDU_PROXY_HTTP_PORT:
      BAIDU_PROXY_SOCKS_HOST:
      BAIDU_PROXY_SOCKS_PORT:
      CREATE_PLATFORM_WHITELIST:
      DEPLOYMENT_TYPE:
      FCM_PROXY:
      FCM_PROXY_HTTP_HOST:
      FCM_PROXY_HTTP_PORT:
      FCM_PROXY_SOCKS_HOST:
      FCM_PROXY_SOCKS_PORT:
      GCM_PROXY:
      GCM_PROXY_HTTP_HOST:
      GCM_PROXY_HTTP_PORT:
      GCM_PROXY_SOCKS_HOST:
      GCM_PROXY_SOCKS_PORT:
      MYSQL:
      MYSQL_EXTERNAL_DATABASE:
      MYSQL_EXTERNAL_HOST:
      MYSQL_EXTERNAL_PASSWORD:
      MYSQL_EXTERNAL_PORT:
      MYSQL_EXTERNAL_USERNAME:
      MYSQL_INTERNAL_SERVICE_PLAN:
      REDIS_ANALYTICS:
      REDIS_ANALYTICS_EXTERNAL_DB_NUMBER:
      REDIS_ANALYTICS_EXTERNAL_HOST:
      REDIS_ANALYTICS_EXTERNAL_PASSWORD:
      REDIS_ANALYTICS_EXTERNAL_PORT:
      REDIS_ANALYTICS_INTERNAL_SERVICE_PLAN:
      PUSH_PUSH_NOTIFICATIONS_API_DB_ENCRYPTION_KEY:
      PUSH_PUSH_NOTIFICATIONS_DEFAULT_SYSTEM_TENANT_NAME:
      PUSH_PUSH_NOTIFICATIONS_INSTANCES:
      PUSH_PUSH_NOTIFICATIONS_INSTANCE_TYPE:
      DELETE_PUSH_NOTIFICATIONS_INSTANCES:
      DELETE_PUSH_NOTIFICATIONS_INSTANCE_TYPE:

- name: disable-errands
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [config-product]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [config-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [config-product]
      trigger: true
    - get: jq
      params:
        globs:
        - "*linux64*"
      passed: [config-product]

  - task: disable-errands
    file: pipelines-repo/tasks/disable-errands/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))
      ERRANDS: ((errands_to_disable))

- name: apply-changes
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [disable-errands]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [disable-errands]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [disable-errands]

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    params:
      DEBUG: ((debug))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))

- name: set-upgrade-pipeline
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [apply-changes]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [apply-changes]
      trigger: true

  - task: set-upgrade-pipeline
    file: pipelines-repo/tasks/set-upgrade-pipeline/task.yml
    params:
      DEBUG: ((debug))
      CONCOURSE_USERNAME: ((concourse_user))
      CONCOURSE_PASSWD: ((concourse_pwd))
      CONCOURSE_URL: ((concourse_url))
      BUILD_PIPELINE_NAME: ((pipeline-name))
      BUILD_TEAM_NAME: ((team-name))
      UPGRADE_PIPELINE_NAME: ((upgrade-pipeline-name))
      PRODUCT_NAME: ((product_name))
      PRODUCT_IDENTIFIER: ((product_identifier))
      PRODUCT_VERSION: ((product_version))
